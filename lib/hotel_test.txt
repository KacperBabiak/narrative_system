///////////////////////////////////entity
				type object;
				type character : object;
				type item : object;

				entity actor : character;
				entity science : character;
				entity doctor : character;
				entity agent : character;
				entity mc : character;
				entity tumblr : character;

				entity game : entity;

				//////////////////////////////////property


				//properties
				property health(character : character) : number;
				property points(character : character) : number;
				property has(character : character, item : item) : number;
				property did_something(char: character) : number;
				property happiness(character : character) : number;
				property altruism(character : character) : number;
				property ambition(character : character) : number;
				

				//emotions towards other characters
				property likes(character1: character, character2 : character) : number;
				property trusts(character1: character, character2 : character) : number;
entity food: item;  
entity money: item;  
entity weapon: item;  
entity book: item;  

health(agent) = 1 ; 
points(agent) = 0 ; 
happiness(agent) = 10 ;
altruism(agent) = 17 ;
ambition(agent) = 15 ;
likes(agent, doctor) = 5 ;
likes(agent, science) = 0 ;
likes(agent, actor) = 0 ;
likes(agent, tumblr) = 0 ;
trusts(agent, doctor) = 0 ;
trusts(agent, science) = 0 ;
trusts(agent, actor) = 0 ;
trusts(agent, tumblr) = 0 ;
has(agent, weapon) = 1 ;
has(agent, money) = 1 ;

health(doctor) = 100 ; 
points(doctor) = 0 ; 
happiness(doctor) = 18.75 ;
altruism(doctor) = 17 ;
ambition(doctor) = 15 ;
likes(doctor, agent) = 0 ;
likes(doctor, science) = 0 ;
likes(doctor, actor) = 5 ;
likes(doctor, tumblr) = 0 ;
trusts(doctor, agent) = 0 ;
trusts(doctor, science) = 0 ;
trusts(doctor, actor) = 0 ;
trusts(doctor, tumblr) = 0 ;
has(doctor, food) = 1 ;
health(science) = 10 ; 
points(science) = 0 ; 
happiness(science) = 10 ;
altruism(science) = 18 ;
ambition(science) = 17 ;
likes(science, doctor) = 0 ;
likes(science, agent) = 0 ;
likes(science, actor) = 0 ;
likes(science, tumblr) = 0 ;
trusts(science, doctor) = 0 ;
trusts(science, agent) = 0 ;
trusts(science, actor) = 0 ;
trusts(science, tumblr) = 0 ;
has(science, food) = 1 ;
has(science, money) = 0 ;

health(actor) = 10 ; 
points(actor) = 0 ; 
happiness(actor) = 4 ;
altruism(actor) = -1 ;
ambition(actor) = 4 ;
likes(actor, doctor) = 5 ;
likes(actor, science) = 0 ;
likes(actor, agent) = 0 ;
likes(actor, tumblr) = 5 ;
trusts(actor, doctor) = 0 ;
trusts(actor, science) = 0 ;
trusts(actor, agent) = 0 ;
trusts(actor, tumblr) = 1 ;
has(actor, money) = 1 ;
health(tumblr) = 100 ; 
points(tumblr) = 0 ; 
happiness(tumblr) = 10.5 ;
altruism(tumblr) = 2 ;
ambition(tumblr) = 2 ;
likes(tumblr, doctor) = 0 ;
likes(tumblr, science) = 0 ;
likes(tumblr, agent) = 0 ;
likes(tumblr, actor) = 3 ;
trusts(tumblr, doctor) = 0 ;
trusts(tumblr, science) = 0 ;
trusts(tumblr, agent) = 0 ;
trusts(tumblr, actor) = 1 ;
has(tumblr, money) = 0 ;
////////////////////////////////////////actions

	//items

	action give(char : character, other: character, item : item) {
		precondition:
			char != other

			&has(char, item) > 0

			&health(char) > 0
			&health(other) > 0
			
		
			;

		effect:
			did_something(char) = did_something(char) + 1
			//&did_something(other) = did_something(other) + 1
			&has(char, item) = has(char, item) - 1
			&has(other, item) = has(other, item) + 1
			
			&happiness(char) =happiness(char) + (likes(char,other)/6)
			&altruism(char) = (altruism(char) +  2 )
			&likes(char,other) =(likes(char,other) +  1 )
			
			&happiness(other) =happiness(other) + 3
			&altruism(other) = altruism(other) +  3

			&likes(other,char) = likes(other,char) +  2
			&trusts(other,char) = trusts(other,char) + 2
			
			;
		consenting: char;
		
	};



	action take(char : character, other: character, item : item) {
		precondition:
			char != other
			&has(other, item) > 0

			&health(char) > 0
			&health(other) > 0
			
			;

		effect:
			did_something(char) = did_something(char) + 1

			&has(char, item) = has(char, item)  +1
			&has(other, item) = has(other, item) - 1
			
			
			&happiness(char) =happiness(char) - (altruism(char)/2) - (likes(char,other)/5) 
			&altruism(char) = altruism(char) - 3
			&ambition(char) = ambition(char) + 2
			&trusts(char,other) = trusts(char,other) - 3
			&health(char) = health(char) - 2


			&happiness(other) =happiness(other)  - 4
			&altruism(other) = altruism(other) - 3
			&ambition(other) = ambition(other) + 1
			&likes(other,char) =likes(other,char) -  4
			&trusts(other,char) = trusts(other,char) - 4
			&health(other) = health(other) - 3
			
			;
		consenting: char;
		
	};


	//dodaj value, maja rozne ceny 
	action exchange(char : character, other: character, item1 : item, item2 :item) {
		precondition:
			char != other
			&item1 !=item2
			&has(char, item1) >0
			&has(other, item2) >0
		

			&health(char) > 0
			&health(other) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1
			//&did_something(other) = did_something(other) + 1


			&has(char, item1) = has(char, item1) - 1
			&has(other, item1) = has(other, item1) + 1

			&has(char, item2) = has(char, item2) + 1
			&has(other, item2) = has(other, item2) - 1
			
			&happiness(char) =happiness(char) +3 
			&altruism(char) = altruism(char)+  1
			&ambition(char) = ambition(char) + 1
			&likes(char,other) =likes(char,other) +  1
			&trusts(char,other) = trusts(char,other) + 2


			&happiness(other) =happiness(other) +3 
			&altruism(other) = altruism(other)+  1
			&ambition(other) = ambition(other) + 1
			&likes(other,char) =likes(other,char) +  1
			&trusts(other,char) = trusts(other,char) + 2
			
			;
		consenting: char,other;
		
	};

	action compliment(char : character, other: character) {
		precondition:
			char != other
			&health(char) > 0
			&health(other) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			
			&happiness(char) =happiness(char) +  (altruism(char)/7) + (likes(char,other)/7)
			&altruism(char) = altruism(char)+  2
			&likes(char,other) =likes(char,other) +  1
			&trusts(char,other) = trusts(char,other) + 1


			&happiness(other) =happiness(other) +  (altruism(other)/7) + (likes(other,char)/7) + 3
			&altruism(other) = altruism(other)+  2
			&likes(other,char) =likes(other,char) +  3
			&trusts(other,char) = trusts(other,char) + 1
			
			;
		consenting: char;
		
	};
	action work(char : character) {
		precondition:
			health(char) > 0
			
			;

		effect:
			did_something(char) = did_something(char) + 1

			&has(char, money) = has(char, money)  +1
			
			
			&happiness(char) =happiness(char) + (ambition(char)/4) 
			&ambition(char) = ambition(char) + 1
			&health(char) = health(char) - 3
			
			;
		consenting: char;
		
	};


	action eat(char : character) {
		precondition:
			health(char) > 0
			&has(char,food) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1

			&has(char,food) = has(char,food)  - 1
			
			
			&happiness(char) =happiness(char) + 2

			&health(char) = health(char) + 5
			
			;
		consenting: char;
		
	};


	action rest(char : character) {
		precondition:
			
			health(char) > 0
			
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			&health(char) = health(char) + 5
			&happiness(char) =happiness(char) + 4
			


			
			
			;
		consenting: char;
		
	};

	action take_care_of(char : character, other: character) {
		precondition:
			char != other
			
			&health(other) < 65
			
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			
			&happiness(char) =happiness(char) + (altruism(char)/7) + (likes(char,other)/7)
			&altruism(char) = altruism(char)+  2
			&likes(char,other) =likes(char,other) +  2
			&trusts(char,other) = trusts(char,other) + 1


			&health(other) = health(other) + 10
			&happiness(other) =happiness(other) + 5
			&altruism(other) = altruism(other)+  4
			&likes(other,char) =likes(other,char) +  5
			&trusts(other,char) = trusts(other,char) + 2
			
			;
		consenting: char;
		
	};

	action attack(char : character, other: character) {
		precondition:
			char != other
			//&health(char) > 0
			//&points(char) > 0
			&altruism(char) < -13
			&ambition(char) > 13
			
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			&happiness(char) = happiness(char) - 5 - (altruism(char)/5) - (likes(char,other)/5)
			&altruism(char) = altruism(char) -  4
			&ambition(char) = ambition(char) + 3
			&trusts(char,other) = trusts(char,other) - 2

			&health(other) = health(other) - 10
			&happiness(other) = happiness(other) - (altruism(other)/5) - 3
			&altruism(other) = altruism(other) - 4
			&ambition(other) = ambition(other) - 2
			&likes(other,char) =likes(other,char) - 4
			&trusts(other,char) = (trusts(other,char) - 4)
			
			;
		consenting: char;
		
	};

	action read(char : character) {
		precondition:
			health(char) > 0
			&has(char,book) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1

			
			
			&happiness(char) =happiness(char) + 3

			
			
			;
		consenting: char;
		
	};

	action spend_time_together(char : character, other: character) {
		precondition:
			char != other
			
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			
			&happiness(char) =happiness(char) +  (likes(char,other)/3)
			&altruism(char) = altruism(char)+  2
			&likes(char,other) =likes(char,other) +  3
			&trusts(char,other) = trusts(char,other) + 2

			&happiness(other) =happiness(other) + (likes(other,char)/3)
			&altruism(other) = altruism(other)+  2
			&likes(other,char) =likes(other,char) +  3
			&trusts(other,char) = trusts(other,char) + 2
			
			;
		consenting: char;
		
	};

	action intimidate(char : character, other: character) {
		precondition:
			char != other
			&health(char) > 0
			&health(other) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			&happiness(char) =happiness(char) -  (altruism(char)/7) - (likes(char,other)/7)
			&altruism(char) = altruism(char) - 2
			&trusts(char,other) = trusts(char,other) - 1


			&happiness(other) =happiness(other) -  (altruism(other)/7) - (likes(other,char)/7) - 2
			&ambition(other) = ambition(other) - 3
			&altruism(other) = altruism(other) - 3
			&likes(other,char) =likes(other,char) -  4
			&trusts(other,char) = trusts(other,char) - 1
			
			;
		consenting: char;

	};

	action gossip_about (char : character, other: character, about : character) {
		precondition:
			char != other
			&other != about
			&char !=about
			&health(char) > 0
			&health(other) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1

			&happiness(char) = happiness(char) - (altruism(char)/8)
			&altruism(char) = altruism(char) - 1


			&happiness(other) = happiness(other) - (altruism(other)/8)
			&altruism(other) = altruism(other) - 1
			&likes(other,char) =likes(other,char) +  1
			&trusts(other,char) = trusts(other,char) - 1

			&likes(other,about) =likes(other,about) - 2 - (trusts(other,char)/6)
			&trusts(other,about) = trusts(other,about) - 2 - (trusts(other,char)/6)
			
			;
		consenting: char;
		
	};

	action praise_someone(char : character, other: character, about :character) {
		precondition:
			char != other
			&other != about
			&char !=about
			&health(char) > 0
			&health(other) > 0
			;

		effect:
			did_something(char) = did_something(char) + 1
			
			
			&happiness(char) = happiness(char) + (altruism(char)/8)
			&altruism(char) = altruism(char) + 1


			&happiness(other) = happiness(other) + (altruism(other)/8)
			&altruism(other) = altruism(other) + 1
			&likes(other,char) =likes(other,char) +  1
			&trusts(other,char) = trusts(other,char) + 1

			&likes(other,about) =likes(other,about) + 2 + (trusts(other,char)/6)
			&trusts(other,about) = trusts(other,about) + 2 + (trusts(other,char)/6)
			
			;
		consenting: char;
		
	};
	//////////////////utility

	
utility(): 
			if (did_something(agent) ==1)
			(if(happiness(agent)>10) 1 else 0) + (if(has(science,money)>0) 1 else 0)  
			
			else 0;
 
utility(agent): 
   (if(happiness(agent)>10) 1 else 0) + (if(has(science,money)>0) 1 else 0) ;

utility(science):
has(science,weapon);

