type item;
type place;
type basketballPlace : place;
type arrestPlace : place;
type crime; 
type citizen : character;
type police : character;
type detective : police;
type inspector : police;
type world;

property alive(character : character) : boolean;
property underArrest(character : character) : number;
property angry(character : character) : number;
property searched(place : place) : number;
property suspect(character : character, c : crime) : boolean;
property clue(crime : crime, item : item, place : place) : boolean;
property at(character : character) : place;
property has(item : item) : character;
property later(world : world) : boolean;
		   
entity Alice : citizen;
entity Bob : citizen;
entity Charlie : citizen;
entity Sherlock : detective;
entity HomeB : place;
entity BasketballCourt : basketballPlace;
entity Downtown : arrestPlace;
entity Basketball : item;
entity Bat : item;
entity Theft : crime;
entity Murder : crime;
		   
		   entity world:world;
						
						!later(world);

		   alive(Alice) ;
underArrest(Alice) = 0;
angry(Alice) = 1;
at(Alice) = Downtown;
alive(Bob) ;
underArrest(Bob) = 0;
angry(Bob) = 1;
at(Bob) = HomeB;
alive(Charlie) ;
underArrest(Charlie) = 0;
angry(Charlie) = 1;
at(Charlie) = Downtown;
alive(Sherlock) ;
underArrest(Sherlock) = 0;
angry(Sherlock) = 1;
at(Sherlock) = HomeB;
searched(HomeB) = 1;
searched(BasketballCourt) = 1;
searched(Downtown) = 1;
has(Basketball) = Bob;
has(Bat) = Bob;
believes(Bob,alive(Alice) ) ;
believes(Bob,underArrest(Alice) = 0) ;
believes(Bob,angry(Alice) = 1) ;
believes(Bob,at(Alice) = Downtown) ;
believes(Bob,alive(Bob) ) ;
believes(Bob,underArrest(Bob) = 0) ;
believes(Bob,angry(Bob) = 1) ;
believes(Bob,at(Bob) = HomeB) ;
believes(Bob,alive(Charlie) ) ;
believes(Bob,underArrest(Charlie) = 0) ;
believes(Bob,angry(Charlie) = 1) ;
believes(Bob,at(Charlie) = Downtown) ;
believes(Bob,alive(Sherlock) ) ;
believes(Bob,underArrest(Sherlock) = 0) ;
believes(Bob,angry(Sherlock) = 1) ;
believes(Bob,at(Sherlock) = HomeB) ;
believes(Bob,searched(HomeB) = 1) ;
believes(Bob,searched(BasketballCourt) = 1) ;
believes(Bob,searched(Downtown) = 1) ;
believes(Bob,has(Basketball) = Bob) ;
believes(Bob,has(Bat) = Bob) ;
believes(Charlie,alive(Alice) ) ;
believes(Charlie,underArrest(Alice) = 0) ;
believes(Charlie,angry(Alice) = 1) ;
believes(Charlie,at(Alice) = Downtown) ;
believes(Charlie,alive(Bob) ) ;
believes(Charlie,underArrest(Bob) = 0) ;
believes(Charlie,angry(Bob) = 1) ;
believes(Charlie,at(Bob) = HomeB) ;
believes(Charlie,alive(Charlie) ) ;
believes(Charlie,underArrest(Charlie) = 0) ;
believes(Charlie,angry(Charlie) = 1) ;
believes(Charlie,at(Charlie) = Downtown) ;
believes(Charlie,alive(Sherlock) ) ;
believes(Charlie,underArrest(Sherlock) = 0) ;
believes(Charlie,angry(Sherlock) = 1) ;
believes(Charlie,at(Sherlock) = HomeB) ;
believes(Charlie,searched(HomeB) = 1) ;
believes(Charlie,searched(BasketballCourt) = 1) ;
believes(Charlie,searched(Downtown) = 1) ;
believes(Charlie,has(Basketball) = Bob) ;
believes(Charlie,has(Bat) = Bob) ;
believes(Sherlock,alive(Alice) ) ;
believes(Sherlock,underArrest(Alice) = 0) ;
believes(Sherlock,angry(Alice) = 1) ;
believes(Sherlock,at(Alice) = Downtown) ;
believes(Sherlock,alive(Bob) ) ;
believes(Sherlock,underArrest(Bob) = 0) ;
believes(Sherlock,angry(Bob) = 1) ;
believes(Sherlock,at(Bob) = HomeB) ;
believes(Sherlock,alive(Charlie) ) ;
believes(Sherlock,underArrest(Charlie) = 0) ;
believes(Sherlock,angry(Charlie) = 1) ;
believes(Sherlock,at(Charlie) = Downtown) ;
believes(Sherlock,alive(Sherlock) ) ;
believes(Sherlock,underArrest(Sherlock) = 0) ;
believes(Sherlock,angry(Sherlock) = 1) ;
believes(Sherlock,at(Sherlock) = HomeB) ;
believes(Sherlock,searched(HomeB) = 1) ;
believes(Sherlock,searched(BasketballCourt) = 1) ;
believes(Sherlock,searched(Downtown) = 1) ;
believes(Sherlock,has(Basketball) = Bob) ;
believes(Sherlock,has(Bat) = Bob) ;

action travel(character : character, from : place, to : place){
	precondition:
		from != to & 
		at(character) == from &
		alive(character)
		&character == Alice;
	effect:
		   later(world) &
		at(character) = to;
	consenting: character; 
	observing(c : character) : at(c) == from | at(c) == to; 
};

action arrest(police : police, character : character, place : place, crime : crime){
	precondition: 
		at(police) == place &
		at(character) == place &
		police != character &
		alive(police) &
		alive(character) &
		suspect(character, crime)&police == Alice;
		   
	effect:
		   later(world) &
		underArrest(character) = 1;
	consenting: police;
	observing(a : character) : at(a) == place;
};

action steal(thief : citizen, victim : citizen, item : item, place : place){
	precondition:
		at(thief) == place &
		at(victim) == place &
		has(item) == victim &
		thief != victim &
		alive(thief)&thief == Alice;
	effect:
		   later(world) &
		has(item) = thief &
		angry(victim) = 1 &
		clue(Theft, item, place);
	consenting: thief;
	observing(c : character) : (c == thief | c == victim) | (at(c) == place & place != Downtown); // crimes downtown aren't observed
};

action play_basketball(player1 : citizen, player2 : citizen, place : basketballPlace){
	precondition:
		player1 != player2 &
		at(player1) == place &
		alive(player1) &
		at(player2) == place &
		alive(player2) &
		has(Basketball) == player1 & player1 == Alice;
	effect:
		   later(world) &
		angry(player1) = 0 &
		angry(player2) = 0;
	consenting: player1;
	observing(c : character) : at(c) == place;
};

action kill(killer : citizen, victim : citizen, item : item, place : place){
	precondition:
		killer != victim &
		at(killer) == place &
		at(victim) == place &
		alive(killer) &
		alive(victim) &
		has(item) == killer &
		underArrest(killer) == 0 & killer == Alice;
	effect:
		   later(world) &
		!alive(victim) &
		clue(Murder, item, place);
	consenting: killer;
	observing(c : character) : c == killer | (at(c) == place & place != Downtown); 
};
	
action find_clues(police : police, crime : crime, item : item, place : place){
	precondition:
		at(police) == place &
		alive(police)
		&police == Alice;
	effect:
		   later(world) &
		searched(place) = 1 &
		if(clue(crime, item, place))
			believes(police, clue(crime, item, place));
	consenting: police;
	observing(c : character) : at(c) == place;
};

action share_clues(police1 : police, police2 : police, crime : crime, item : item, place : place){
	precondition:
		police1 != police2 &
		at(police1) == place &
		alive(police1) &
		at(police2) == place &
		alive(police2) &
		clue(crime, item, place) &police1 == Alice ;
	effect:
		   later(world) &
		believes(police2, clue(crime, item, place));
	consenting: police1;
	observing(c : character) : at(c) == place;
};
 
action suspect_of_crime(police : police, citizen : citizen, crime : crime, item : item, place : place){
	precondition:
		police != citizen &
		at(police) == place &
		alive(police) &
		at(citizen) == place &
		alive(citizen) &
		has(item) == citizen
		&police == Alice &
		exists(p : place) clue(crime, item, p);
	effect:
		   later(world) &
		suspect(citizen, crime);
	consenting: police;
	observing(c : character) : at(c) == place;
};
trigger see_has(character : character, other : character, item : item, place : place){
	precondition:
		at(character) == place &
		at(other) == place &
		has(item) == other &
		believes(character, has(item) != other);
	effect:
		believes(character, has(item) = other);
};

trigger see_hasnt(character : character, other : character, item : item, place : place){
	precondition:
		at(character) == place &
		at(other) == place &
		has(item) != other & 
		believes(character, has(item) == other);
	effect:
		believes(character, has(item) = ?);
};

trigger see_at(character : character, other : character, place : place){
	precondition:
		at(character) == place &
		at(other) == place &
		believes(character, at(other) != place);
	effect:
		believes(character, at(other) = place);
};

trigger see_gone(character : character, other : character, place : place){
	precondition:
		at(character) == place &
		at(other) != place &
		believes(character, at(other) == place);
	effect:
		believes(character, at(other) = ?);
};
		   








			action predictaction_37_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at(Bob)==HomeB) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_38_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_39_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==BasketballCourt) & 
( at(Bob)==HomeB) & 
( at(Charlie)==BasketballCourt) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_40_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==BasketballCourt) & 
( at(Bob)==Downtown) & 
( at(Charlie)==BasketballCourt) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_41_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==BasketballCourt) & 
( at(Bob)==HomeB) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_42_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==BasketballCourt) & 
( at(Bob)==Downtown) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_43_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==HomeB) & 
( at(Bob)==HomeB) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_44_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==HomeB) & 
( at(Bob)==Downtown) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_45_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==Downtown) & 
( at(Bob)==HomeB) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_46_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==Downtown) & 
( at(Bob)==Downtown) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_47_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==BasketballCourt) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_48_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==BasketballCourt) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_49_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_50_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_51_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_52_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_53_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==BasketballCourt) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_54_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==BasketballCourt) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_55_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_56_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_57_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_58_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Bob) ; 
 effect: 
at(Bob) = BasketballCourt 
}; 
action predictaction_59_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at(Alice)==HomeB) & 
( at(Bob)==BasketballCourt) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = HomeB 
}; 
action predictaction_60_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==HomeB) & 
( at(Bob)==Downtown) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = HomeB 
}; 
action predictaction_61_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==BasketballCourt) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = HomeB 
}; 
action predictaction_62_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==Downtown) & 
( at(Charlie)==HomeB) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = HomeB 
}; 
action predictaction_63_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at(Alice)==Downtown) & 
( at(Bob)==BasketballCourt) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = Downtown 
}; 
action predictaction_64_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Alice)==Downtown) & 
( at(Bob)==HomeB) & 
( has(Basketball)==Alice) ; 
 effect: 
at(Bob) = Downtown 
}; 
action predictaction_65_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==BasketballCourt) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = Downtown 
}; 
action predictaction_66_Bob_travel(char : character){ 
precondition: 
later(world) & 
( at( Bob)==HomeB) & 
( at(Charlie)==Downtown) & 
( has(Basketball)==Charlie) ; 
 effect: 
at(Bob) = Downtown 
}; 
utility(): 
 1 - angry(Alice);
utility(Alice): 
 1 - angry(Alice);
utility(Bob): 
 3 - (sum(c : citizen) angry(c));
utility(Charlie): 
 if(!alive(Alice)) 1 else 0;
utility(Sherlock): 
 (sum(c : citizen) underArrest(c)); 
